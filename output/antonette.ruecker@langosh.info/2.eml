Date: Wed, 02 Mar 2016 09:29:53 +0000
From: Wilhelmine Doyle <gregg.upton@erdmandaniel.net>
To: Cara Crona III <antonette.ruecker@langosh.info>
Message-ID: <56dd9b0fd0cc_7fc744a69ac54178@saasbook.mail>
Subject: Re: My viewmodel doesnt increment numbers depending on JSON result
 knockout
Mime-Version: 1.0
Content-Type: multipart/alternative;
 boundary="--==_mimepart_56dd9b0f2eae_7fc744a69ac540f6";
 charset=UTF-8
Content-Transfer-Encoding: 7bit


----==_mimepart_56dd9b0f2eae_7fc744a69ac540f6
Content-Type: text/plain;
 charset=UTF-8
Content-Transfer-Encoding: 7bit

You bind your .preOrdered div visibility to a function. Don't do that. Instead, bind to an observable or computed observable.

A second thing to ask yourself this: are you okay with the page initially showing with the div hidden, and it popping up once the Ajax request is done? Or do you want to show anything until it's done?

In the latter case, you perhaps shouldn't call ko.applyBindings until in the success handler.

In either case, I recommend this for a hasPreorder observable and setting its value:

var self = this;

self.preOrderedDomains = ko.observableArray([]);
self.hasPreOrder = ko.observable(false);

self.updateHasPreorder = function(domainSearchResult, event) {
    var data = {
        'preOrderCode' : self.preOrderCode,
        'domainCount' : self.domainCount,
    };

    $.ajax('/ajax-check-preorder.do', { 
        data: data,
        type: "post", 
        dataType: 'json',
        success: function(result) {
            if (utils.getProperty('domainCount',result, true) ) {
                self.preOrderedDomains.push(domainSearchResult);
            }
            console.log(result);

            var hasPreorderNew = ko.utils.arrayFilter(self.preOrderedDomains(), function (domainCount) {
                return domainCount === domainSearchResult.domainCount;
            }).length

            self.hasPreorder(hasPreorderNew);
        }
    });
}


Then call self.updateHasPreorder at an appropriate time in your app, e.g. when it first loads, or upon fired subscription of other observables.
>
>On 2016-03-02 07:46:28 UTC, Cara Crona III <antonette.ruecker@langosh.info> wrote:
>
>>I have the following JSON object: 
>>
>>Object {domainCount: 1, preOrderCode: "something"}
>>
>>
>>I call it like this in my viewModel: 
>>
>>this.preOrderedDomains = ko.observableArray([]);
>>this.hasPreOrder = function(domainSearchResult, event) {
>>            var data = {
>>                'preOrderCode' : this.preOrderCode,
>>                'domainCount' : this.domainCount,
>>                }
>>
>>            $.ajax('/ajax-check-preorder.do', { 
>>            data: data,
>>            type: "post", 
>>            dataType: 'json',
>>            success: function(result) {
>>                if (utils.getProperty('domainCount',result, true) ) {
>>                    self.preOrderedDomains.push(domainSearchResult);
>>                 }
>>                        console.log(result);
>>
>>                }
>>            });
>>      return ko.utils.arrayFilter(self.preOrderedDomains(), function (domainCount) {
>>        return domainCount == domainSearchResult.domainCount;
>>    }).length;
>>
>>    }
>>
>>
>>It checks if there is a preorder when you refresh the page. 
>>If there is, it should display the following in the DOM: 
>>
>><div class="preOrdered" data-bind="visible: $root.domainSearch.hasPreOrder($data)">
>>            <strong class="single_domain" data-bind="visible: $root.domainSearch.preOrderedDomains().length <= 1">
>>            <span class="update--domain" data-bind="text: domainSearch.preOrderedDomains().length"></span>&nbsp;<bean:message key="site.domain.search.selected.domain" />
>>            </strong>
>>            <strong class="multiple_domains" data-bind="visible: $root.domainSearch.preOrderedDomains().length >= 2">
>>            <span class="update--domain" data-bind="text: domainSearch.preOrderedDomains().length"></span>&nbsp;<bean:message key="site.domain.search.selected.domains" />
>>            </strong>
>>        </div>
>>
>>
>>When I reload it shows fine the number one if there is a domainCount of one. But it doesnt increment the number. 
>>So if there is 2 or 3 etc ends up in an infinte loop. 
>>
>>Does anyone have an idea of what Im doing wrong?
----==_mimepart_56dd9b0f2eae_7fc744a69ac540f6
Content-Type: text/html;
 charset=UTF-8
Content-Transfer-Encoding: 7bit

<p>You bind your <code>.preOrdered</code> <code>div</code> visibility to a function. Don't do that. Instead, bind to an observable or computed observable.</p>

<p>A second thing to ask yourself this: are you okay with the page initially showing with the <code>div</code> hidden, and it popping up once the Ajax request is done? Or do you want to show anything until it's done?</p>

<p>In the latter case, you perhaps shouldn't call <code>ko.applyBindings</code> until in the <code>success</code> handler.</p>

<p>In either case, I recommend this for a <code>hasPreorder</code> observable and setting its value:</p>

<pre><code>var self = this;

self.preOrderedDomains = ko.observableArray([]);
self.hasPreOrder = ko.observable(false);

self.updateHasPreorder = function(domainSearchResult, event) {
    var data = {
        'preOrderCode' : self.preOrderCode,
        'domainCount' : self.domainCount,
    };

    $.ajax('/ajax-check-preorder.do', { 
        data: data,
        type: "post", 
        dataType: 'json',
        success: function(result) {
            if (utils.getProperty('domainCount',result, true) ) {
                self.preOrderedDomains.push(domainSearchResult);
            }
            console.log(result);

            var hasPreorderNew = ko.utils.arrayFilter(self.preOrderedDomains(), function (domainCount) {
                return domainCount === domainSearchResult.domainCount;
            }).length

            self.hasPreorder(hasPreorderNew);
        }
    });
}
</code></pre>

<p>Then call <code>self.updateHasPreorder</code> at an appropriate time in your app, e.g. when it first loads, or upon fired subscription of other observables.</p><br><br>On 2016-03-02 07:46:28 UTC, Cara Crona III &lt;<a href=mail_to:"antonette.ruecker@langosh.info" target="_blank">antonette.ruecker@langosh.info</a>&gt; wrote: <blockquote><p>I have the following JSON object: </p>

<pre><code>Object {domainCount: 1, preOrderCode: "something"}
</code></pre>

<p>I call it like this in my viewModel: </p>

<pre><code>this.preOrderedDomains = ko.observableArray([]);
this.hasPreOrder = function(domainSearchResult, event) {
            var data = {
                'preOrderCode' : this.preOrderCode,
                'domainCount' : this.domainCount,
                }

            $.ajax('/ajax-check-preorder.do', { 
            data: data,
            type: "post", 
            dataType: 'json',
            success: function(result) {
                if (utils.getProperty('domainCount',result, true) ) {
                    self.preOrderedDomains.push(domainSearchResult);
                 }
                        console.log(result);

                }
            });
      return ko.utils.arrayFilter(self.preOrderedDomains(), function (domainCount) {
        return domainCount == domainSearchResult.domainCount;
    }).length;

    }
</code></pre>

<p>It checks if there is a preorder when you refresh the page. 
If there is, it should display the following in the DOM: </p>

<pre><code>&lt;div class="preOrdered" data-bind="visible: $root.domainSearch.hasPreOrder($data)"&gt;
            &lt;strong class="single_domain" data-bind="visible: $root.domainSearch.preOrderedDomains().length &lt;= 1"&gt;
            &lt;span class="update--domain" data-bind="text: domainSearch.preOrderedDomains().length"&gt;&lt;/span&gt;&amp;nbsp;&lt;bean:message key="site.domain.search.selected.domain" /&gt;
            &lt;/strong&gt;
            &lt;strong class="multiple_domains" data-bind="visible: $root.domainSearch.preOrderedDomains().length &gt;= 2"&gt;
            &lt;span class="update--domain" data-bind="text: domainSearch.preOrderedDomains().length"&gt;&lt;/span&gt;&amp;nbsp;&lt;bean:message key="site.domain.search.selected.domains" /&gt;
            &lt;/strong&gt;
        &lt;/div&gt;
</code></pre>

<p>When I reload it shows fine the number one if there is a domainCount of one. But it doesnt increment the number. 
So if there is 2 or 3 etc ends up in an infinte loop. </p>

<p>Does anyone have an idea of what Im doing wrong?</p></blockquote>
----==_mimepart_56dd9b0f2eae_7fc744a69ac540f6--
